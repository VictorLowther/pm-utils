* pm-utils has no provision for halting the suspend/resume process if
  a hook fails. Adding naive support for this is easy, getting it
  right is less so.

* suspend-hybrid handling is less than optimal.  The current code
  assumes it is always resuming from suspend.  While this is probably
  the common case, we need to take into account that we will also
  sometimes be returning from hibernate and run the hooks
  accordingly. Otherwise, suspend-hybrid and video quirk handling are
  going to interact very badly some of the time.

* There are no provisions for configuring the tuxonice backend.
  Tuxonice has lots of things that can be tuned, but doing so would
  end up duplicating alot of the tuxonice project's hibernate script.
  We should talk to their maintainers about merging common
  functionality.

* If a hook needs to handle parameters passed from the command line,
  it has to do that on its own.  A simple parameter-parsing engine
  might come in handy.

* Currently, we really only handle suspend/resume.  The
  powermanagement system should use some maintenance. Should we also
  handle other powermanagement-related tasks?  

* Beef up the abstraction layer between the hooks and the pm-utils
  core infrastructure.  We should work on making that API stable
  enough that...

* pm-utils to become the default low-level userspace power management handling
  infrastructure for the majority of Linux (and mabye other
  unixalikes) distributions.  The core pm-utils infrastructure is
  already fairly distro-agnostic, leveraging it to be os-agnostic
  should also be possible.  We should get it to the point that any
  program that needs something to happen when running a power
  management task uses our functionality instead of rewriting their own.

* Merge the man pages for pm-action/pm-is-supported/pm-powersave from Debian
  (which are written in docbook xml). Also convert the existing man pages from
  docbook sgml to docbook xml.
  The man pages should be improved to document new configuration variables,
  contain examples how to write hooks etc.

* Provide an "--auto" option for pm-suspend, which tries to get the quirks from
  hal. Add an option (let's call it "--store-quirks-as-fdi" for now), which
  allows to easily generate an fdi file with the quirk parameters passed to
  pm-suspend.
