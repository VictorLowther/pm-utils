#!/bin/sh

. "$PM_FUNCTIONS"

command_exists blockdev || exit $NA

# more readahead = (hopefully) less hard drive activity.
# less readahead = less trashing the page cache.

DRIVE_READAHEAD=${DRIVE_READAHEAD:-3072}

help() {
    cat <<EOF
--------
$0: Control drive readahead.

This hook tries to trade off the number of times we spin up a drive
to read for potentially wasted cache.

Drive readahead parameters:

DRIVE_READAHEAD = Number of KB to speculatively read when power management 
is requested. Defaults to 3072 KB.

EOF
}

save_default() {
    state_exists "${0##*/}_${1##*/}" && return
    blockdev --getfra "$1" |savestate "${0##*/}_${1##*/}"
}

restore_default() {
    state_exists "${0##*/}_${1##*/}" || return
    printf "Restoring readahead for %s..." "$1"
    blockdev --setfra "$1" "$(restorestate "${0##*/}_${1##*/}")" && \
        echo Done. || echo Failed.
}

set_readahead() {
    save_default "$1"
    printf "Setting readahead for %s to %d..." "$1" "$DRIVE_READAHEAD"
    /sbin/blockdev --setfra $DRIVE_READAHEAD "$1" && \
        echo Done. || echo Failed.
}

for_each_fs_blkdev() {
    # the intent here is to iterate through all filesystems
    # mounted on a local block device. It Works For The Maintainer(tm).
    # More sophistication in figuring out what exactly is a local block device
    # would be welcome.
    for dev in $(awk '/^\/dev\// {print $1}'</etc/mtab); do
        [ -b "$dev" ] || continue
	"$1" "$dev"
    done
}

case $1 in
    true) for_each_fs_blkdev set_readahead  ;;
    false) for_each_fs_blkdev restore_default ;;
    help) help;;
    *) exit $NA ;;
esac

exit 0
